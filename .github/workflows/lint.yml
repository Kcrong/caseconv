name: Lint and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  # Required: allow read access to the content for analysis.
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  pull-requests: read
  # Optional: allow write access to checks to allow the action to annotate code in the PR.
  checks: write

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.23', '1.24']
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m --config=.golangci.yml
          only-new-issues: true

      - name: Archive lint results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-results-${{ matrix.go-version }}
          path: |
            lint-report.json
            lint-report.xml
          retention-days: 14

  test:
    needs: golangci
    name: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.23', '1.24']
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage-${{ matrix.go-version }}
          path: coverage.txt
          retention-days: 14 